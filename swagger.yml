openapi: "3.0.0"
info:
  title: Pokemons
  description:  An API prototype for a game service
  version: 1.0.0 BETA
servers:
  - url: /
    description: Homologation Server
schemes:
  - https

paths:
  /pokemons:
    get:
      tags: 
        - Pokemons
      summary: Returns a list of pokemons
      produces:
        - application/json
      responses:
        200:
          description: OK
          content:
              schema:
                type: string
                example:
                  - id: "ed6aecbe-0659-4289-af39-497263d128e6"
                    tipo: "charizard"
                    treinador: "Jean Pita"
                    nivel: "1"
                  - id: "3198791b-8de6-4f02-9495-281cd4fa748d6"
                    tipo: "pikachu"
                    treinador: "Seu Jorge"
                    nivel: "1"
            
  /pokemons/{id}:
    get:
      tags: 
        - Pokemons
      summary: Return a pokemons by id
      parameters:
        - in: path
          name: id
          required: true
      produces:
        - application/json
      responses:
        200:
          description: OK
          content:
              schema:
                example: 
                  id: "ed6aecbe-0659-4289-af39-497263d128e6"
                  tipo: "charizard"
                  treinador: "Jean Pita"
                  nivel: "1"

  /create-pokemons:
    post:
      tags: 
        - Pokemons
      summary: Create a Pokemon
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/'
              example: 
                tipo: "charizard"
                treinador: "Jean Pita"
      
      produces:
        - application/json
      responses:
        201:
          description: OK
          content:
              schema:
                example: 
                  id: "ed6aecbe-0659-4289-af39-497263d128e6"
                  tipo: "charizard"
                  treinador: "Jean Pita"
                  nivel: "1"

  /update-pokemons/{id}:
    put:
      tags: 
        - Pokemons
      summary: Update a Pokemon
      parameters:
        - in: path
          name: id
          required: true

      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/'
              example: 
                treinador: "Jean Pita" 
      produces:
        - application/json
      responses:
        204:
          description: OK

  /delete-pokemons/{id}:
    delete:
      tags: 
        - Pokemons
      summary: Delete a Pokemon
      parameters:
        - in: path
          name: id
          required: true
      produces:
        - application/json
      responses:
        204:
          description: OK  
  

  /to-battle/{pokemonAId}/{pokemonBId}:
    post:
      tags: 
        - Pokemons
      summary: Play Pokemon
      parameters:
        - in: path
          name: pokemonAId
          required: true
        - in: path
          name: pokemonBId
          required: true
      produces:
        - application/json
      responses:
        200:
          description: OK
          content:
            schema:
              type: string
              example:
                vencedor: 
                  id: "ed6aecbe-0659-4289-af39-497263d128e6"
                  tipo: "charizard"
                  treinador: "Jean Pita"
                  nivel: "1"
                perdedor: 
                  id: "3198791b-8de6-4f02-9495-281cd4fa748d6"
                  tipo: "pikachu"
                  treinador: "Seu Jorge"
                  nivel: "0"  
